<?xml version="1.0"?>
<doc>
<assembly>
<name>
Mkey
</name>
</assembly>
<members>
<member name="M:Mkey.Files.GetAlteration(System.String)">
	<summary>
 Identifies the alteration of the note using the .imy note format expression.
 </summary>
	<param name="expression">IMY note format expression.</param>
	<returns>Return an integer that sums with the note value.</returns>
	<remarks>This value is used to sum with the note and play the corresponding sound.</remarks>
</member><member name="M:Mkey.Files.GetChord(System.String)">
	<summary>
 Identifies the note using the .imy note format expression.
 </summary>
	<param name="expression">IMY note format expression.</param>
	<returns>Return the corresponding note.</returns>
	<remarks>This value can be used to sum with the alteration and play the corresponding sound.</remarks>
</member><member name="M:Mkey.Files.GetDuration(System.String)">
	<summary>
 Interprets which duration the user wants to use when the note is played.
 </summary>
	<param name="expression">IMY note format expression.</param>
	<returns>Integer that represents a note duration.</returns>
	<remarks>The result must be integer and all the types of duration must have a proportion.</remarks>
</member><member name="M:Mkey.Files.Read(System.String)">
	<summary>
 Reads a .imy file and plays the song.
 </summary>
	<param name="filename">File name path of the song.</param>
	<remarks>This command is called when the program is run from command-line.</remarks>
</member><member name="P:Mkey.Note.FullName">
	<summary>
 Full note name.
 </summary>
</member><member name="P:Mkey.Note.AbbreviatedName">
	<summary>
 Abbreviated note name such as C, D#,F#,G, etc.
 </summary>
</member><member name="P:Mkey.Note.imyName">
	<summary>
 Note name according .imy format codification.
 </summary>
</member><member name="P:Mkey.Note.Note">
	<summary>
 Integer value of the note.
 </summary>
</member><member name="P:Mkey.Note.NoteFile">
	<summary>
 .wav file to be opened that corresponds to note name.
 </summary>
</member><member name="P:Mkey.Note.NoteBuffer">
	<summary>
 .wav file converted to byte array.
 </summary>
</member><member name="P:Mkey.Note.Octave">
	<summary>
 Octave of the note.
 </summary>
</member><member name="P:Mkey.Note.Beat">
	<summary>
 Sets or gets the beats per minute (bpm) of the music.
 </summary>
</member><member name="F:Mkey.Note.Lenght">
	<summary>
 Sets or gets the Lenght of the note.
 </summary>
</member><member name="T:Mkey.Note.Notes">
	<summary>
 Represent the musical notes and its relative values.
 </summary>
	<remarks>These values sum with the alteration.</remarks>
</member><member name="T:Mkey.Note.Chords">
	<summary>
 Represent the same musical notes, but with one letter.
 </summary>
	<remarks>These values are used when the 'GetChord' function.</remarks>
</member><member name="T:Mkey.Note.Lenghts">
	<summary>
 Represent all the lengths to be used in the variable 'Lenght'.
 </summary>
	<remarks></remarks>
</member><member name="F:Mkey.Note.alterationsignals">
	<summary>
 Gets the alteration signals for sharp and flat notes.
 </summary>
</member><member name="M:Mkey.Note.#ctor(Mkey.Note.Notes,Mkey.Note.Alteration,System.Int32)">
	<summary>
 Sets all the properties you need to play a musical note.
 </summary>
	<param name="noteNumber">Note name.</param>
	<param name="alter">Alteration (sharp or flat).</param>
	<param name="octav">Octave (1-8).</param>
	<remarks>This 'Sub' is more useful when the keyword 'New' is included.</remarks>
</member><member name="M:Mkey.Note.Play">
	<summary>
 Plays the sound.
 </summary>
	<remarks>The sound are recorded in .wav files, so a message error is 
 displayed if some file is not found.</remarks>
</member><member name="P:Mkey.Mkey.IsRec">
	<summary>
 Determines whether you are saving your music on a .imy file.
 </summary>
</member><member name="P:Mkey.Mkey.RecFile">
	<summary>
 Gets or sets recording file .imy name.
 </summary>
</member><member name="P:Mkey.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Mkey.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Mkey.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>